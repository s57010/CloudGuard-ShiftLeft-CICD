# This is a basic workflow to help you get started with Actions.

name: Check Point CloudGuard Assessment

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  IAC_Assessment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Pull Check Point Shiftleft image
        run: docker pull checkpoint/shiftleft

      # Runs a set of commands using the runners shell
      - name: Run IAC assessment on Terraform folder
        run: |
          docker run -v=$(pwd):/tmp/ -e "CHKP_CLOUDGUARD_ID=${{ secrets.CHKP_CLOUDGUARD_ID }}" -e \
          "CHKP_CLOUDGUARD_SECRET=${{ secrets.CHKP_CLOUDGUARD_SECRET }}" -e "SHIFTLEFT_REGION=eu1" checkpoint/shiftleft shiftleft iac-assessment \
            -p /tmp/terraform/ -a GithubActionsScan \
            -r 64 -w -e d0eada4e-2bb4-494e-9f52-14cc9cb2ed58 -i terraform \
            -o sarif 1> /tmp/iacresults.sarif
        continue-on-error: true
        
      # Upload sarif file
      - name: Upload Sarif results to Github
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: /tmp/iacresults.sarif
            
  Image_Scanner:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build from Dockerfile and add some malware xD
        run: |
          docker build . -t badimage
          docker save badimage -o badimage.tar
      - name: Run Shiftleft assessment on built image
        run: |  
          docker pull checkpoint/shiftleft
          docker run -v=$(pwd):/tmp/ -e "CHKP_CLOUDGUARD_ID=${{ secrets.CHKP_CLOUDGUARD_ID }}" -e \
          "CHKP_CLOUDGUARD_SECRET=${{ secrets.CHKP_CLOUDGUARD_SECRET }}" -e "SHIFTLEFT_REGION=eu1" checkpoint/shiftleft shiftleft image-scan \
            -i /tmp/badimage.tar -e d0eada4e-2bb4-494e-9f52-14cc9cb2ed58 -r 2002
        
  Code_Scanner:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run SourceGuard scan on code
        run: |
          docker pull checkpoint/shiftleft
          docker run -v=$(pwd):/tmp/ -e "CHKP_CLOUDGUARD_ID=${{ secrets.CHKP_CLOUDGUARD_ID }}" -e \
          "CHKP_CLOUDGUARD_SECRET=${{ secrets.CHKP_CLOUDGUARD_SECRET }}" -e "SHIFTLEFT_REGION=eu1" checkpoint/shiftleft shiftleft code-scan -s /tmp/ \
           -e d0eada4e-2bb4-494e-9f52-14cc9cb2ed58 -r -2003
          
